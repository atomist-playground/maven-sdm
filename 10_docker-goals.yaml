docker_build:    
  test: 
  - has_file: Dockerfile  
    
  depends_on: 
  - mvn_build
  - node_build
         
  goals:   
#  - containers:   
#    - name: kaniko
#      image: gcr.io/kaniko-project/executor
#      args: 
#      - --context=dir:///atm/home
#      - --destination=atomist/${push.repo.name}:${push.after.sha}
#      - --dockerfile=Dockerfile
#      - --cache=true
#      - --cache-repo=atomist/layer-cache
#      volume_mounts:
#      - name: creds
#        mount_path: /kaniko/.docker/config.json
#    volumes:
#    - name: creds
#      host_path:
#        path: ${home}/.docker/config.json
  - containers:
    - name: docker-build
      image: docker
      args:
      - /bin/sh
      - -c
      - >-
        docker build . -f Dockerfile -t atomist/${push.repo.name}:${push.after.sha} &&
        docker push atomist/${push.repo.name}:${push.after.sha} &&
        echo '{ "SdmGoal": { "push": { "after": { "images" :[{ "imageName": "atomist/${push.repo.name}:${push.after.sha}" }] } } } }' > $ATOMIST_RESULT
      volume_mounts:
      - name: sock
        mount_path: /var/run/docker.sock
      secrets:
        env:
        - name: GITHUB_TOKEN
          value:
            provider:
              type: scm 
        file_mounts:
        - mount_path: /root/.docker/config.json
          value:
            provider:
              type: docker
              names:
              - atomist
    input:
    - cache
    volumes:
    - name: sock
      host_path:
        path: /var/run/docker.sock
